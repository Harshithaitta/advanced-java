Lamb.java


import java.util.*;
import java.util.Random;
import java.util.function.Supplier;

public class Lamb
{
public static void main(String[] args)
{

String[] s={ "Spring", "Spring Boot", "API" , "Microservices","AWS", "PCF","Azure", "Docker", "Kubernetes"};

List<String> courses =Arrays.asList(s);

courses.stream().sorted().forEach( (String x) -> System.out.println(x));

List<Integer> numbers = Arrays.asList(12, 9, 13, 4, 6, 2, 4, 12, 15);

Integer sum = numbers.stream().reduce(0, (Integer x,Integer y) -> x + y);

Supplier<Integer> randomSupplier = () ->
{
Random rand = new Random();
return rand.nextInt(1000);
};
System.out.println(randomSupplier.get());

}

}



RollDice.java

import java.util.*;
import java.util.Random;
import java.util.function.Supplier;
import java.lang.*;

public class RollDice
{
  public static void main(String[] args)
{
    Supplier<Integer> die1 = () ->
{
Random rand = new Random();
        return (int)(Math.random()*6) + 1;
};

Supplier<Integer> die2 = () ->
{
Random rand = new Random();
        return (int)(Math.random()*6) + 1;
};
int x=(int)die1.get();
int y=(int)die1.get();
System.out.println("The first die comes up " + x);
System.out.println("The second die comes up " + y);
System.out.println("The sum is: " + (x+y));
}
 
} 

ListSum.java

import java.util.*;
class ListSum
{
public static void main(String args[])
{
List<Integer> numbers = Arrays.asList(12, 9, 13, 4, 6, 2, 4, 12, 15);
printCubesOfOddNumbersInListFunctional(numbers);
printOddNumbersInListFunctional(numbers);
}
private static void printOddNumbersInListFunctional(List<Integer> numbers)
{
numbers.stream()
.filter(number -> number % 2 != 0)
.forEach(System.out::println);
}
private static void printCubesOfOddNumbersInListFunctional(List<Integer> numbers)
{
numbers.stream()
.filter(number -> number % 2 != 0)
.map (number -> number * number * number)
.forEach(System.out::println);
}

}

Arth.java

import java.util.Random;
interface Arithmetic {
	int operation(int a, int b);
}

public class Arth {
	public static void main(String[] args) {
		int die1;   
    int die2;   
		die1=1+(int)(Math.random()*6) ; 
		die2=1+(int)(Math.random()*6) ; 
		Arithmetic addition = (int a, int b) -> (a + b);
		System.out.println("the first die roll value"+die1);
		System.out.println("the second die roll value"+die2);
		System.out.println("sum of two dice roll is = " + addition.operation(die1, die2));

		
		
	}
}

Main.java(square root)

import java.util.*;
interface SquareRoot
{
    double [] op(double[] a);
}
public class Main
{
    double[] sqrt(double[] a)
        {
            double x = a[0];
            double y = 1;
            double e = a[1];
            double i=0;
           
            while (x - y > e)
            {
               x = (x + y) / 2;
               y = a[0] / x;
               i++;
            }
        double l[]=new double[2];
            l[0]=x;
            l[1]=i;
            return l;
        }

public static void main(String[] args)
{
Scanner s= new Scanner(System.in);
SquareRoot sq;
System.out.println("Enter the number");
double n=s.nextDouble();
System.out.println("Enter the error of tolerence");
double e=s.nextDouble();
double a[]=new double[2];
a[0]=n;
a[1]=e;
Main m=new Main();
sq=(double[] z)->m.sqrt(z);//lambda expression
System.out.println("Square Root: "+sq.op(a)[0]);
System.out.println("No of iterations: "+sq.op(a)[1]);

}

}
